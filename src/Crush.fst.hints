[
  "\u0013Þ‚'Âé\u00010´ô^Î¢Z‹\u0019",
  [
    [
      "Crush.bExpState",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpInit",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpInit",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpInit",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.bexpInit", 4, 2, 1, [ "@query" ], 0 ],
    [ "Crush.bexpAlloc", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.bexpAlloc",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpAlloc",
      3,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpAlloc",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.bexpAssign", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.bexpAssign",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpAssign",
      3,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpAssign",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.bexpEval", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.bexpEval",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpEval",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.bexpInterp",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int", "assumption_Prims.tuple2_haseq",
        "assumption_Total.t_haseq", "equation_Crush.bExpState",
        "equation_Prims.eqtype", "function_token_typing_Prims.int",
        "kinding_BoolExp.boolExp@tok", "kinding_Total.t@tok",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.allocN",
      1,
      2,
      1,
      [
        "@query", "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "equality_tok_Prims.LexTop@tok", "int_inversion", "int_typing",
        "pretyping_ae567c2fb75be05905677af440075565",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction", "projection_inverse_BoxInt_proj_0",
        "well-founded-ordering-on-nat"
      ],
      0
    ],
    [
      "Crush.allocN",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.allocN",
      3,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.allocN",
      4,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.allocN",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.allocTy", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.allocTy",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.allocTy",
      3,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.allocTy",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.allocTy",
      5,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.lookupLst",
      1,
      2,
      1,
      [
        "@query", "binder_x_45b5ec812472bc4115943497241d5053_0",
        "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_ExprTypes.LOC", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_Interpreter.isVal_lst.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Cons_hd",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_fc003454349819ae5ed8a644efa3342e",
        "subterm_ordering_Prims.Cons", "typing_Interpreter.isVal_lst"
      ],
      0
    ],
    [
      "Crush.lookupLst",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.lookupLst",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.lookupLst",
      4,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [ "Crush.foldPebble", 1, 2, 1, [ "@query" ], 0 ],
    [ "Crush.foldClean", 1, 2, 1, [ "@query" ], 0 ],
    [ "Crush.foldBennett", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.compile",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Crush.Bennett",
        "constructor_distinct_ExprTypes.UNIT",
        "constructor_distinct_PairHeap.Empty", "disc_equation_Crush.Bennett",
        "disc_equation_Crush.Boundaries", "disc_equation_Crush.Pebbled",
        "disc_equation_ExprTypes.ARRAY", "disc_equation_ExprTypes.LAMBDA",
        "disc_equation_ExprTypes.LOC", "disc_equation_ExprTypes.UNIT",
        "disc_equation_Util.Err", "disc_equation_Util.Val",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Crush.allocTy",
        "equation_Crush.bExpState", "equation_Interpreter.config",
        "equation_with_fuel_Interpreter.isVal.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Crush.cleanupStrat",
        "fuel_guarded_inversion_Util.result",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_ExprTypes.ARRAY__0",
        "projection_inverse_PairHeap.Empty__a",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_Crush.allocTy"
      ],
      0
    ],
    [
      "Crush.compile",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.compile",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.compile",
      4,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.compile",
      5,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_Prims.nat",
        "haseqTm_refine_ba523126f67e00e7cd55f0b92f16681d"
      ],
      0
    ],
    [
      "Crush.compile",
      6,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_Prims.eqtype", "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [ "Crush.state_equiv", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.state_equiv",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.state_equiv",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.state_equiv",
      4,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.state_equiv",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Crush.state_equiv_impl",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [ "Crush.state_equiv_impl", 2, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.state_equiv_impl",
      3,
      2,
      1,
      [
        "@query", "equation_Crush.state_equiv", "int_inversion",
        "unit_typing"
      ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [ "Crush.eval_bexp_swap", 4, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.eval_bexp_swap",
      5,
      2,
      2,
      [
        "@query", "binder_x_0252d137bc3fef00f0695356dc8aeb09_0",
        "binder_x_3ad6abd43c9a73c5e7f6675387388c43_2",
        "binder_x_7d6dd5c063a9127e76c6e8c49fca26ee_1",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_3",
        "constructor_distinct_BoolExp.BAnd",
        "constructor_distinct_BoolExp.BFalse",
        "constructor_distinct_BoolExp.BNot",
        "constructor_distinct_BoolExp.BVar",
        "constructor_distinct_BoolExp.BXor",
        "constructor_distinct_Prims.Mktuple2", "data_elim_BoolExp.BAnd",
        "data_elim_BoolExp.BXor", "disc_equation_BoolExp.BAnd",
        "disc_equation_BoolExp.BFalse", "disc_equation_BoolExp.BNot",
        "disc_equation_BoolExp.BVar", "disc_equation_BoolExp.BXor",
        "equality_tok_BoolExp.BFalse@tok", "equation_Crush.bExpState",
        "equation_Crush.bexpEval", "equation_Crush.state_equiv",
        "equation_FStar.List.Tot.test_sort", "equation_Interpreter.boolEval",
        "equation_Interpreter.boolState", "equation_Prims._assert",
        "equation_Prims.snd", "equation_Total.state",
        "equation_with_fuel_BoolExp.evalBexp.fuel_instrumented",
        "equation_with_fuel_BoolExp.substBexp.fuel_instrumented",
        "fuel_correspondence_BoolExp.evalBexp.fuel_instrumented",
        "fuel_correspondence_BoolExp.substBexp.fuel_instrumented",
        "fuel_guarded_inversion_BoolExp.boolExp",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_BoolExp.evalBexp.fuel_instrumented",
        "fuel_irrelevance_BoolExp.substBexp.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_BoolExp.BAnd__0",
        "projection_inverse_BoolExp.BNot__0",
        "projection_inverse_BoolExp.BVar__0",
        "projection_inverse_BoolExp.BXor__0",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "subterm_ordering_BoolExp.BAnd", "subterm_ordering_BoolExp.BNot",
        "subterm_ordering_BoolExp.BXor", "subterm_ordering_Prims.Mktuple2"
      ],
      0
    ],
    [
      "Crush.state_equiv_alloc",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int",
        "bool_typing", "constructor_distinct_BoolExp.BFalse",
        "constructor_distinct_Prims.Mktuple2", "data_elim_Prims.Mktuple2",
        "equality_tok_BoolExp.BFalse@tok", "equation_Crush.bExpState",
        "equation_Crush.bexpAlloc", "equation_Crush.bexpEval",
        "equation_Crush.state_equiv", "equation_Interpreter.boolAlloc",
        "equation_Interpreter.boolEval", "equation_Interpreter.boolState",
        "equation_Prims.eqtype", "equation_Prims.fst", "equation_Prims.snd",
        "equation_Total.lookup", "equation_Total.state",
        "equation_Total.update",
        "equation_with_fuel_BoolExp.evalBexp.fuel_instrumented",
        "fuel_correspondence_BoolExp.evalBexp.fuel_instrumented",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t", "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_Total.state", "kinding_BoolExp.boolExp@tok",
        "lemma_Total.lookup_update1", "lemma_Total.lookup_update2",
        "primitive_Prims.op_Equality", "proj_equation_Prims.Mktuple2__1",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_Prims.fst", "typing_tok_BoolExp.BFalse@tok", "unit_typing"
      ],
      0
    ],
    [
      "Crush.state_equiv_assign",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_bool", "bool_inversion",
        "constructor_distinct_Prims.Mktuple2", "data_elim_Prims.Mktuple2",
        "data_elim_Total.Mkt", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Crush.bExpState", "equation_Crush.bexpAssign",
        "equation_Crush.bexpEval", "equation_Crush.state_equiv",
        "equation_Interpreter.boolAssign", "equation_Interpreter.boolEval",
        "equation_Interpreter.boolState", "equation_Prims.eqtype",
        "equation_Prims.fst", "equation_Prims.snd", "equation_Total.state",
        "fuel_correspondence_BoolExp.substBexp.fuel_instrumented",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_Total.state", "int_inversion", "int_typing",
        "kinding_BoolExp.boolExp@tok", "lemma_Total.lookup_update1",
        "lemma_Total.lookup_update2",
        "pretyping_3ad6abd43c9a73c5e7f6675387388c43",
        "pretyping_ae567c2fb75be05905677af440075565",
        "primitive_Prims.op_Equality",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "proj_equation_Prims.Mktuple2__1", "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_BoolExp.evalBexp",
        "typing_BoolExp.substBexp", "typing_FStar.Set.mem",
        "typing_PairHeap.elts", "typing_Prims.snd", "unit_inversion",
        "unit_typing"
      ],
      0
    ]
  ]
]