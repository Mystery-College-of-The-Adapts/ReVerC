[
  "\u0007:åºÈr%ñ\u0012¬…\u007f¬zo\u0004",
  [
    [
      "Crush.bExpState",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpInit",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpInit",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpInit",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.bexpAlloc", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.bexpAlloc",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpAlloc",
      3,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpAlloc",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.bexpAssign", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.bexpAssign",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.bexpAssign",
      3,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpAssign",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.bexpEval", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.bexpEval",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.bexpEval",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.bexpInterp",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int", "assumption_Prims.tuple2_haseq",
        "assumption_Total.t_haseq", "equation_Crush.bExpState",
        "equation_FStar.Set.eqtype", "function_token_typing_Prims.int",
        "kinding_BoolExp.boolExp@tok", "kinding_Total.t@tok",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.allocN",
      1,
      2,
      1,
      [
        "@query", "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "equality_tok_Prims.LexTop@tok", "int_inversion", "int_typing",
        "pretyping_ae567c2fb75be05905677af440075565",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction", "projection_inverse_BoxInt_proj_0",
        "well-founded-ordering-on-nat"
      ],
      0
    ],
    [
      "Crush.allocN",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.allocN",
      3,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.allocN",
      4,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.allocN",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Crush.allocTy", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.allocTy",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.allocTy",
      3,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.allocTy",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.allocTy",
      5,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.lookupLst",
      1,
      2,
      1,
      [
        "@query", "binder_x_45b5ec812472bc4115943497241d5053_0",
        "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_ExprTypes.LOC", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_Interpreter.isVal_lst.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Cons_hd",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_fc003454349819ae5ed8a644efa3342e",
        "subterm_ordering_Prims.Cons", "typing_Interpreter.isVal_lst"
      ],
      0
    ],
    [
      "Crush.lookupLst",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.lookupLst",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.lookupLst",
      4,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [ "Crush.foldPebble", 1, 2, 1, [ "@query" ], 0 ],
    [ "Crush.foldClean", 1, 2, 1, [ "@query" ], 0 ],
    [ "Crush.foldBennett", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.compile",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_Crush.Bennett",
        "constructor_distinct_Crush.Boundaries",
        "constructor_distinct_Crush.Pebbled",
        "constructor_distinct_ExprTypes.UNIT",
        "constructor_distinct_PairHeap.Empty", "disc_equation_Crush.Bennett",
        "disc_equation_Crush.Boundaries", "disc_equation_Crush.Pebbled",
        "disc_equation_ExprTypes.ARRAY", "disc_equation_ExprTypes.LAMBDA",
        "disc_equation_ExprTypes.LOC", "disc_equation_ExprTypes.UNIT",
        "disc_equation_Utils.Err", "disc_equation_Utils.Val",
        "equality_tok_Crush.Boundaries@tok", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Crush.allocTy", "equation_Crush.bExpState",
        "equation_Interpreter.config",
        "equation_with_fuel_Interpreter.isVal.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Crush.cleanupStrat",
        "fuel_guarded_inversion_Utils.result",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_ExprTypes.ARRAY__0",
        "projection_inverse_PairHeap.Empty__a",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_Crush.allocTy"
      ],
      0
    ],
    [
      "Crush.compile",
      2,
      2,
      1,
      [ "@query", "assumption_BoolExp.boolExp_haseq" ],
      0
    ],
    [
      "Crush.compile",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.compile",
      4,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.compile",
      5,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_Prims.nat",
        "haseqTm_refine_ba523126f67e00e7cd55f0b92f16681d"
      ],
      0
    ],
    [
      "Crush.compile",
      6,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.state_equiv",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Crush.state_equiv",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.state_equiv",
      3,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.state_equiv",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Crush.state_equiv_impl",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Crush.state_equiv_impl",
      2,
      2,
      1,
      [
        "@query", "equation_Crush.state_equiv", "int_inversion",
        "unit_typing"
      ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      2,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Crush.eval_bexp_swap",
      4,
      2,
      2,
      [
        "@query", "binder_x_0252d137bc3fef00f0695356dc8aeb09_0",
        "binder_x_3ad6abd43c9a73c5e7f6675387388c43_2",
        "binder_x_7d6dd5c063a9127e76c6e8c49fca26ee_1",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_3",
        "constructor_distinct_BoolExp.BAnd",
        "constructor_distinct_BoolExp.BFalse",
        "constructor_distinct_BoolExp.BNot",
        "constructor_distinct_BoolExp.BVar",
        "constructor_distinct_BoolExp.BXor",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Mktuple2", "data_elim_BoolExp.BAnd",
        "data_elim_BoolExp.BXor", "disc_equation_BoolExp.BAnd",
        "disc_equation_BoolExp.BFalse", "disc_equation_BoolExp.BNot",
        "disc_equation_BoolExp.BVar", "disc_equation_BoolExp.BXor",
        "equality_tok_BoolExp.BFalse@tok", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Crush.bExpState", "equation_Crush.bexpEval",
        "equation_Crush.state_equiv", "equation_FStar.List.Tot.test_sort",
        "equation_Interpreter.boolEval", "equation_Interpreter.boolState",
        "equation_Prims._assert", "equation_Prims.snd",
        "equation_Total.state",
        "equation_with_fuel_BoolExp.evalBexp.fuel_instrumented",
        "equation_with_fuel_BoolExp.substBexp.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_BoolExp.evalBexp.fuel_instrumented",
        "fuel_correspondence_BoolExp.substBexp.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_BoolExp.boolExp",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_BoolExp.evalBexp.fuel_instrumented",
        "fuel_irrelevance_BoolExp.substBexp.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoolExp.BAnd__0",
        "projection_inverse_BoolExp.BNot__0",
        "projection_inverse_BoolExp.BVar__0",
        "projection_inverse_BoolExp.BXor__0",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_BoolExp.BAnd", "subterm_ordering_BoolExp.BNot",
        "subterm_ordering_BoolExp.BXor", "subterm_ordering_Prims.Mktuple2",
        "unit_inversion"
      ],
      0
    ],
    [
      "Crush.state_equiv_alloc",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int",
        "bool_typing", "constructor_distinct_BoolExp.BFalse",
        "constructor_distinct_Prims.Mktuple2", "data_elim_Prims.Mktuple2",
        "equality_tok_BoolExp.BFalse@tok", "equation_Crush.bExpState",
        "equation_Crush.bexpAlloc", "equation_Crush.bexpEval",
        "equation_Crush.state_equiv", "equation_FStar.Set.eqtype",
        "equation_Interpreter.boolAlloc", "equation_Interpreter.boolEval",
        "equation_Interpreter.boolState", "equation_Prims.fst",
        "equation_Prims.snd", "equation_Total.lookup",
        "equation_Total.state", "equation_Total.update",
        "equation_with_fuel_BoolExp.evalBexp.fuel_instrumented",
        "fuel_correspondence_BoolExp.evalBexp.fuel_instrumented",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t", "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_Total.state", "kinding_BoolExp.boolExp@tok",
        "lemma_Total.lookup_update1", "lemma_Total.lookup_update2",
        "primitive_Prims.op_Equality", "proj_equation_Prims.Mktuple2__1",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_Prims.fst", "typing_tok_BoolExp.BFalse@tok", "unit_typing"
      ],
      0
    ],
    [
      "Crush.state_equiv_assign",
      1,
      2,
      1,
      [
        "@query", "assumption_BoolExp.boolExp_haseq",
        "assumption_Prims.HasEq_bool", "bool_inversion",
        "constructor_distinct_Prims.Mktuple2", "data_elim_Prims.Mktuple2",
        "data_elim_Total.Mkt", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Crush.bExpState", "equation_Crush.bexpAssign",
        "equation_Crush.bexpEval", "equation_Crush.state_equiv",
        "equation_Interpreter.boolAssign", "equation_Interpreter.boolEval",
        "equation_Interpreter.boolState", "equation_Prims.eqtype",
        "equation_Prims.fst", "equation_Prims.snd", "equation_Total.state",
        "fuel_correspondence_BoolExp.substBexp.fuel_instrumented",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_Total.state", "int_inversion", "int_typing",
        "kinding_BoolExp.boolExp@tok", "lemma_Total.lookup_update1",
        "lemma_Total.lookup_update2",
        "pretyping_3ad6abd43c9a73c5e7f6675387388c43",
        "pretyping_ae567c2fb75be05905677af440075565",
        "primitive_Prims.op_Equality",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "proj_equation_Prims.Mktuple2__1", "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_BoolExp.evalBexp",
        "typing_BoolExp.substBexp", "typing_FStar.Set.mem",
        "typing_PairHeap.elts", "typing_Prims.snd", "unit_inversion",
        "unit_typing"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      1,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      2,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      3,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      4,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      5,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      6,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [ "Crush.step_pres_state_equiv", 7, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.step_lst_pres_state_equiv",
      1,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_lst_pres_state_equiv",
      2,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_lst_pres_state_equiv",
      3,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_lst_pres_state_equiv",
      4,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_lst_pres_state_equiv",
      5,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Crush.step_lst_pres_state_equiv",
      6,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_Crush.bExpState", "equation_Crush.bexpInterp",
        "equation_FStar.Set.eqtype",
        "function_token_typing_Crush.bexpInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [ "Crush.step_lst_pres_state_equiv", 7, 2, 1, [ "@query" ], 0 ],
    [
      "Crush.step_pres_state_equiv",
      8,
      2,
      2,
      [
        "@query", "binder_x_0252d137bc3fef00f0695356dc8aeb09_0",
        "binder_x_6b74f0037009d29c0456341c2163d847_2",
        "binder_x_7d6dd5c063a9127e76c6e8c49fca26ee_1",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_3", "bool_inversion",
        "bool_typing", "constructor_distinct_ExprTypes.AND",
        "constructor_distinct_ExprTypes.APPEND",
        "constructor_distinct_ExprTypes.APPLY",
        "constructor_distinct_ExprTypes.ASSERT",
        "constructor_distinct_ExprTypes.ASSIGN",
        "constructor_distinct_ExprTypes.BEXP",
        "constructor_distinct_ExprTypes.BOOL",
        "constructor_distinct_ExprTypes.GET_ARRAY",
        "constructor_distinct_ExprTypes.LET",
        "constructor_distinct_ExprTypes.ROT",
        "constructor_distinct_ExprTypes.SEQUENCE",
        "constructor_distinct_ExprTypes.SLICE",
        "constructor_distinct_ExprTypes.XOR",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Mktuple2",
        "constructor_distinct_Prims.Mktuple3",
        "constructor_distinct_Tm_unit", "constructor_distinct_Utils.Err",
        "constructor_distinct_Utils.Val", "data_elim_ExprTypes.AND",
        "data_elim_ExprTypes.APPEND", "data_elim_ExprTypes.APPLY",
        "data_elim_ExprTypes.ASSIGN", "data_elim_ExprTypes.GET_ARRAY",
        "data_elim_ExprTypes.LET", "data_elim_ExprTypes.ROT",
        "data_elim_ExprTypes.SEQUENCE", "data_elim_ExprTypes.SLICE",
        "data_elim_ExprTypes.XOR", "data_elim_Interpreter.Mkinterpretation",
        "data_elim_Utils.Err", "data_elim_Utils.Val",
        "data_typing_intro_Prims.Mktuple2@tok",
        "disc_equation_ExprTypes.AND", "disc_equation_ExprTypes.APPEND",
        "disc_equation_ExprTypes.APPLY", "disc_equation_ExprTypes.ARRAY",
        "disc_equation_ExprTypes.ASSERT", "disc_equation_ExprTypes.ASSIGN",
        "disc_equation_ExprTypes.BEXP", "disc_equation_ExprTypes.BOOL",
        "disc_equation_ExprTypes.GET_ARRAY", "disc_equation_ExprTypes.LET",
        "disc_equation_ExprTypes.LOC", "disc_equation_ExprTypes.ROT",
        "disc_equation_ExprTypes.SEQUENCE", "disc_equation_ExprTypes.SLICE",
        "disc_equation_ExprTypes.XOR", "equality_tok_ExprTypes.UNIT@tok",
        "equality_tok_Prims.LexTop@tok", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Crush.bExpState", "equation_Crush.bexpAlloc",
        "equation_Crush.bexpInterp", "equation_Crush.state_equiv",
        "equation_FStar.List.Tot.test_sort", "equation_FStar.Set.eqtype",
        "equation_Interpreter.boolAlloc", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState", "equation_Interpreter.config",
        "equation_Interpreter.isBexp", "equation_Prims._assert",
        "equation_Prims.fst", "equation_Prims.snd", "equation_Total.state",
        "equation_Utils.bindT", "equation_Utils.getVal",
        "equation_Utils.is_Err", "equation_Utils.is_Val",
        "equation_with_fuel_Interpreter.isVal.fuel_instrumented",
        "equation_with_fuel_Interpreter.step.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal.fuel_instrumented",
        "fuel_correspondence_Interpreter.step.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t",
        "fuel_guarded_inversion_Utils.result",
        "fuel_irrelevance_Interpreter.step.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Crush.bExpState",
        "function_token_typing_Crush.bexpInterp",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Interpreter.boolInterp",
        "function_token_typing_Interpreter.boolState",
        "interpretation_Tm_abs_006b1694bb1a787355d910cb052aca07",
        "interpretation_Tm_abs_21f2992ca42e12fec878b95b5baf7307",
        "interpretation_Tm_abs_381be45e8a3974e1c63576644dd97052",
        "interpretation_Tm_abs_3d71f2fe6a3d4235cf8ab9a53d981d94",
        "interpretation_Tm_abs_62359ff8db4829d2e3cf82250ecd361c",
        "interpretation_Tm_abs_7c6ce8a6e62a908b5cb995129afb549a",
        "interpretation_Tm_abs_7e518e5eab3ee57199ad194a0d9d84ec",
        "interpretation_Tm_abs_7ea39c059b11be112ce39a83c89a0fd0",
        "interpretation_Tm_abs_80bb224ce14d292a8d94b6c3c8c6d968",
        "interpretation_Tm_abs_82bd2b55d877e457d1b35cb30016fd3e",
        "interpretation_Tm_abs_82fe06fd42e896f93d134293f01f6c07",
        "interpretation_Tm_abs_97b6c0a9202d5b4d48afa1f6bf7cecac",
        "interpretation_Tm_abs_ad67e99e57f9788d0ab9462753777886",
        "interpretation_Tm_abs_dc9f43bf2187cf6c07a3ff07c8488934",
        "interpretation_Tm_abs_dcdbe06440c29b258a546e22a1a2f7a8",
        "interpretation_Tm_abs_eba2bdcd056943bd0e0ecf6dd0e90b4b",
        "kinding_ExprTypes.gExpr@tok", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Interpreter.Mkinterpretation_alloc",
        "proj_equation_Interpreter.Mkinterpretation_assign",
        "proj_equation_Prims.Mktuple2__1", "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_ExprTypes.AND__0",
        "projection_inverse_ExprTypes.APPEND__0",
        "projection_inverse_ExprTypes.APPLY__0",
        "projection_inverse_ExprTypes.ASSERT__0",
        "projection_inverse_ExprTypes.ASSIGN__0",
        "projection_inverse_ExprTypes.BEXP__0",
        "projection_inverse_ExprTypes.BOOL__0",
        "projection_inverse_ExprTypes.GET_ARRAY__0",
        "projection_inverse_ExprTypes.LET__0",
        "projection_inverse_ExprTypes.LOC__0",
        "projection_inverse_ExprTypes.ROT__0",
        "projection_inverse_ExprTypes.SEQUENCE__0",
        "projection_inverse_ExprTypes.SLICE__0",
        "projection_inverse_ExprTypes.XOR__0",
        "projection_inverse_Interpreter.Mkinterpretation_alloc",
        "projection_inverse_Interpreter.Mkinterpretation_assign",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "projection_inverse_Prims.Mktuple3__1",
        "projection_inverse_Prims.Mktuple3__2",
        "projection_inverse_Prims.Mktuple3__3",
        "projection_inverse_Prims.Mktuple3__a",
        "projection_inverse_Prims.Mktuple3__b",
        "projection_inverse_Prims.Mktuple3__c",
        "projection_inverse_Utils.Err__0", "projection_inverse_Utils.Err__a",
        "projection_inverse_Utils.Val__0", "projection_inverse_Utils.Val__a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_a6f434602943b2296f2a902c15fee423",
        "subterm_ordering_ExprTypes.AND",
        "subterm_ordering_ExprTypes.APPEND",
        "subterm_ordering_ExprTypes.APPLY",
        "subterm_ordering_ExprTypes.ASSERT",
        "subterm_ordering_ExprTypes.ASSIGN",
        "subterm_ordering_ExprTypes.GET_ARRAY",
        "subterm_ordering_ExprTypes.LET", "subterm_ordering_ExprTypes.ROT",
        "subterm_ordering_ExprTypes.SEQUENCE",
        "subterm_ordering_ExprTypes.SLICE", "subterm_ordering_ExprTypes.XOR",
        "subterm_ordering_Prims.Mktuple2", "subterm_ordering_Prims.Mktuple3",
        "token_correspondence_Crush.bexpAlloc",
        "token_correspondence_Crush.bexpAssign",
        "token_correspondence_Interpreter.boolAlloc",
        "token_correspondence_Interpreter.boolAssign",
        "token_correspondence_Interpreter.step.fuel_instrumented",
        "token_correspondence_Prims.op_LessThan",
        "typing_Interpreter.config", "typing_Interpreter.isBexp",
        "typing_Interpreter.isVal", "typing_Interpreter.step",
        "typing_Utils.getVal", "typing_Utils.is_Err", "typing_Utils.is_Val",
        "unit_inversion"
      ],
      0
    ],
    [
      "Crush.step_pres_state_equiv",
      9,
      2,
      1,
      [
        "@query", "binder_x_0252d137bc3fef00f0695356dc8aeb09_0",
        "binder_x_7d6dd5c063a9127e76c6e8c49fca26ee_1",
        "binder_x_84a62770dc4fae20d5c368546b439b5f_2",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_3",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Mktuple2",
        "constructor_distinct_Prims.Nil", "constructor_distinct_Utils.Val",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Crush.bExpState",
        "equation_Crush.bexpInterp", "equation_FStar.List.Tot.test_sort",
        "equation_Interpreter.boolInterp", "equation_Interpreter.boolState",
        "equation_Interpreter.listconfig", "equation_Prims._assert",
        "equation_Prims.snd", "equation_Total.state",
        "equation_Utils.getVal", "equation_Utils.is_Val",
        "equation_with_fuel_Interpreter.step_lst.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.step_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Total.t",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "projection_inverse_Prims.Nil_a", "projection_inverse_Utils.Val__0",
        "projection_inverse_Utils.Val__a",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27"
      ],
      0
    ]
  ]
]