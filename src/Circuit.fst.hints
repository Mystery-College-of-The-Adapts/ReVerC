[
  "I\u0018su»~ß²¶¦vð“\u000f%\u001f",
  [
    [
      "Circuit.gate",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "assumption_Prims.tuple2_haseq", "assumption_Prims.tuple3_haseq",
        "function_token_typing_Prims.int"
      ],
      0
    ],
    [
      "Circuit.__proj__RCNOT__item___0",
      1,
      2,
      1,
      [
        "@query", "disc_equation_Circuit.RCNOT",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_db527801bc8279550cfd087f6821b7ef"
      ],
      0
    ],
    [
      "Circuit.__proj__RTOFF__item___0",
      1,
      2,
      1,
      [
        "@query", "disc_equation_Circuit.RTOFF",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_f3284265c4cb2ee8c15e3943f10aa0cf"
      ],
      0
    ],
    [
      "Circuit.__proj__RNOT__item___0",
      1,
      2,
      1,
      [
        "@query", "disc_equation_Circuit.RNOT",
        "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_6ba7e2be214d49bb8d18f130863c1c9e"
      ],
      0
    ],
    [
      "Circuit.uses",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.prettyPrintGate",
      1,
      2,
      1,
      [
        "@query", "disc_equation_Circuit.RCNOT",
        "disc_equation_Circuit.RNOT", "disc_equation_Circuit.RTOFF",
        "fuel_guarded_inversion_Circuit.gate"
      ],
      0
    ],
    [
      "Circuit.applyGate",
      1,
      2,
      1,
      [
        "@query", "disc_equation_Circuit.RCNOT",
        "disc_equation_Circuit.RNOT", "disc_equation_Circuit.RTOFF",
        "fuel_guarded_inversion_Circuit.gate"
      ],
      0
    ],
    [
      "Circuit.applyGate",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      7,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      8,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      9,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      10,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      11,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      12,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      13,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      14,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      15,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      16,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      17,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      18,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      19,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate",
      20,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate",
      21,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.evalCirc",
      1,
      2,
      1,
      [
        "@query", "binder_x_c4ad57559b80f11b499d69e4bf9180c0_1",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "equation_Total.state",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Total.t", "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Circuit.wfGate",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_PairHeap.Empty",
        "disc_equation_Circuit.RCNOT", "disc_equation_Circuit.RNOT",
        "disc_equation_Circuit.RTOFF",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a"
      ],
      0
    ],
    [
      "Circuit.wfGate",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.wfGate",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.wfGate",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.wfCirc",
      1,
      2,
      1,
      [
        "@query", "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "constructor_distinct_PairHeap.Empty", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.circuit",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_tl", "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Circuit.uses",
      2,
      2,
      1,
      [
        "@query", "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "disc_equation_Circuit.RCNOT", "disc_equation_Circuit.RNOT",
        "disc_equation_Circuit.RTOFF", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.circuit",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list", "kinding_Circuit.gate@tok",
        "proj_equation_Prims.Cons_hd", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "subterm_ordering_Prims.Cons", "typing_Prims.__proj__Cons__item__hd"
      ],
      0
    ],
    [
      "Circuit.uses",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses",
      7,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses",
      8,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses",
      9,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods",
      2,
      2,
      1,
      [
        "@query", "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "disc_equation_Circuit.RCNOT", "disc_equation_Circuit.RNOT",
        "disc_equation_Circuit.RTOFF", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.circuit",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list", "kinding_Circuit.gate@tok",
        "proj_equation_Prims.Cons_hd", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "subterm_ordering_Prims.Cons", "typing_Prims.__proj__Cons__item__hd"
      ],
      0
    ],
    [
      "Circuit.mods",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls",
      2,
      2,
      1,
      [
        "@query", "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "disc_equation_Circuit.RCNOT", "disc_equation_Circuit.RNOT",
        "disc_equation_Circuit.RTOFF", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.circuit",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list", "kinding_Circuit.gate@tok",
        "proj_equation_Prims.Cons_hd", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32",
        "subterm_ordering_Prims.Cons", "typing_Prims.__proj__Cons__item__hd"
      ],
      0
    ],
    [
      "Circuit.ctrls",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute",
      1,
      2,
      1,
      [
        "@query", "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "fuel_guarded_inversion_Prims.list",
        "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Circuit.uncompute",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ref_imp_use",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ref_imp_use",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ref_imp_use",
      3,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Cons",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.test_sort", "equation_Prims._assert",
        "equation_Prims.eqtype", "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "equation_with_fuel_Circuit.mods.fuel_instrumented",
        "equation_with_fuel_Circuit.uses.fuel_instrumented",
        "equation_with_fuel_PairHeap.elts.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_PairHeap.elts.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_Circuit.mods.fuel_instrumented",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_intro", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.ctrls.fuel_instrumented",
        "token_correspondence_Circuit.uses.fuel_instrumented",
        "token_correspondence_Prims.op_LessThan",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_Circuit.ctrls",
        "typing_Circuit.mods", "typing_Circuit.uses", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_PairHeap.elts", "typing_SetExtra.ins"
      ],
      0
    ],
    [
      "Circuit.mods_sub_uses",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods_sub_uses",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_FStar.Set.subset",
        "equation_Prims.eqtype",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Prims.int", "int_inversion",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_Circuit.ctrls", "typing_Circuit.mods", "typing_Circuit.uses",
        "typing_FStar.Set.mem", "typing_FStar.Set.union", "unit_inversion",
        "unit_typing"
      ],
      0
    ],
    [
      "Circuit.ctrls_sub_uses",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls_sub_uses",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_FStar.Set.subset",
        "equation_Prims.eqtype",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Prims.int", "int_inversion",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_Circuit.ctrls", "typing_Circuit.mods", "typing_Circuit.uses",
        "typing_FStar.Set.mem", "typing_FStar.Set.union", "unit_inversion",
        "unit_typing"
      ],
      0
    ],
    [
      "Circuit.apply_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.apply_mod",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.apply_mod",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.apply_mod",
      4,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "bool_inversion", "bool_typing",
        "constructor_distinct_Prims.Cons",
        "constructor_distinct_Prims.Mktuple2",
        "constructor_distinct_Prims.Nil", "constructor_distinct_Tm_unit",
        "data_elim_Circuit.RNOT", "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok", "equation_Circuit.applyGate",
        "equation_Circuit.circuit", "equation_FStar.Set.eqtype",
        "equation_Prims.eqtype", "equation_SetExtra.ins",
        "equation_Total.agree_on", "equation_Total.lookup",
        "equation_Total.state", "equation_Total.update",
        "equation_with_fuel_Circuit.mods.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.assoc.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.assoc.fuel_instrumented",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.mods.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.assoc.fuel_instrumented",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "kinding_Circuit.gate@tok", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "lemma_Total.lookup_update2",
        "pretyping_e9a318bbdca2de3bcd80c243409f3c28",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_Negation", "primitive_Prims.op_disEquality",
        "proj_equation_Total.Mkt_dval", "proj_equation_Total.Mkt_elts",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "projection_inverse_Prims.Nil_a",
        "projection_inverse_Total.Mkt_dval",
        "projection_inverse_Total.Mkt_elts",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_Circuit.applyGate", "typing_Circuit.mods",
        "typing_FStar.Set.complement", "typing_FStar.Set.empty",
        "typing_FStar.Set.mem", "typing_FStar.Set.singleton",
        "typing_Total.lookup", "unit_typing"
      ],
      0
    ],
    [
      "Circuit.eval_mod",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.eval_mod",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.eval_mod",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.eval_mod",
      4,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_0",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_1", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Cons",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equality_tok_Prims.LexTop@tok",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Circuit.applyGate",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins", "equation_Total.agree_on",
        "equation_Total.state",
        "equation_with_fuel_Circuit.evalCirc.fuel_instrumented",
        "equation_with_fuel_Circuit.mods.fuel_instrumented",
        "equation_with_fuel_PairHeap.elts.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_PairHeap.elts.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.evalCirc.fuel_instrumented",
        "fuel_irrelevance_Circuit.mods.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "kinding_Circuit.gate@tok", "lemma_FStar.Set.mem_complement",
        "lemma_FStar.Set.mem_empty", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_Negation",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.mods.fuel_instrumented",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_Circuit.mods",
        "typing_FStar.Set.mem", "typing_FStar.Set.singleton",
        "typing_PairHeap.elts", "typing_SetExtra.ins"
      ],
      0
    ],
    [
      "Circuit.evalCirc_append",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "assumption_Total.t_haseq",
        "equation_FStar.Set.eqtype", "equation_Total.state",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Circuit.evalCirc_append",
      2,
      2,
      1,
      [
        "@query", "binder_x_c4ad57559b80f11b499d69e4bf9180c0_2",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.applyGate", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.test_sort", "equation_Prims._assert",
        "equation_Total.state",
        "equation_with_fuel_Circuit.evalCirc.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.evalCirc.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "subterm_ordering_Prims.Cons", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.uses_append",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses_append",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses_append",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uses_append",
      4,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_1", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Mktuple2",
        "data_elim_Prims.Mktuple3", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.uses.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_PairHeap.elts.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_PairHeap.elts.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "kinding_Circuit.gate@tok", "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_intro", "lemma_FStar.Set.mem_empty",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.uses.fuel_instrumented",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_Circuit.uses",
        "typing_FStar.List.Tot.append", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_PairHeap.elts", "typing_SetExtra.ins"
      ],
      0
    ],
    [
      "Circuit.mods_append",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods_append",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods_append",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.mods_append",
      4,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_1", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Cons",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.test_sort", "equation_Prims._assert",
        "equation_Prims.eqtype", "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.mods.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.mods.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "kinding_Circuit.gate@tok", "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_intro", "lemma_FStar.Set.mem_empty",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons", "typing_Circuit.mods",
        "typing_FStar.List.Tot.append", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union"
      ],
      0
    ],
    [
      "Circuit.ctrls_append",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls_append",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls_append",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.ctrls_append",
      4,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_1", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RTOFF",
        "data_elim_Prims.Cons", "data_elim_Prims.Mktuple2",
        "data_elim_Prims.Mktuple3", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_PairHeap.elts.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_PairHeap.elts.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Circuit.ctrls",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "interpretation_Tm_arrow_2c0d400d791d89b628d7628a254fb94e",
        "kinding_Circuit.gate@tok", "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_intro",
        "lemma_FStar.Set.lemma_equal_refl", "lemma_FStar.Set.mem_empty",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons", "token_correspondence_Circuit.ctrls",
        "token_correspondence_Circuit.ctrls.fuel_instrumented",
        "token_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_Circuit.ctrls",
        "typing_FStar.List.Tot.append", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_PairHeap.elts", "typing_SetExtra.ins"
      ],
      0
    ],
    [
      "Circuit.wf_append",
      1,
      2,
      1,
      [
        "@query", "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_1", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "kinding_Circuit.gate@tok", "primitive_Prims.op_AmpAmp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "typing_Circuit.wfCirc", "typing_FStar.List.Tot.append"
      ],
      0
    ],
    [
      "Circuit.rev_uses",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_uses",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_uses",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.op_At",
        "equation_FStar.List.Tot.rev", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_Circuit.uses",
        "function_token_typing_FStar.List.Tot.rev",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion",
        "interpretation_Tm_arrow_2c0d400d791d89b628d7628a254fb94e",
        "interpretation_Tm_arrow_bb7700ff450be6c3158b7701fc6e62ef",
        "kinding_Circuit.gate@tok", "lemma_Circuit.uses_append",
        "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_refl", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar", "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons", "token_correspondence_Circuit.uses",
        "token_correspondence_FStar.List.Tot.rev", "typing_Circuit.uses",
        "typing_FStar.List.Tot.append", "typing_FStar.List.Tot.op_At",
        "typing_FStar.List.Tot.rev", "typing_FStar.List.Tot.rev_acc",
        "typing_FStar.Set.union", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.rev_uses",
      4,
      2,
      1,
      [ "@query", "assumption_Circuit.gate_haseq" ],
      0
    ],
    [
      "Circuit.rev_uses",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_mods",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_mods",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_mods",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.op_At", "equation_FStar.List.Tot.rev",
        "equation_FStar.List.Tot.test_sort", "equation_Prims._assert",
        "equation_Prims.eqtype",
        "equation_with_fuel_Circuit.mods.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_irrelevance_Circuit.mods.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "kinding_Circuit.gate@tok", "lemma_Circuit.mods_append",
        "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_refl", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons", "typing_Circuit.mods",
        "typing_FStar.List.Tot.op_At", "typing_FStar.List.Tot.rev",
        "typing_FStar.Set.mem", "typing_FStar.Set.union"
      ],
      0
    ],
    [
      "Circuit.rev_mods",
      4,
      2,
      1,
      [ "@query", "assumption_Circuit.gate_haseq" ],
      0
    ],
    [
      "Circuit.rev_mods",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_ctrls",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_ctrls",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_ctrls",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.op_At", "equation_FStar.List.Tot.rev",
        "equation_FStar.List.Tot.test_sort", "equation_Prims._assert",
        "equation_Prims.eqtype",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.rev_acc.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Circuit.ctrls",
        "function_token_typing_FStar.List.Tot.rev",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion",
        "interpretation_Tm_arrow_2c0d400d791d89b628d7628a254fb94e",
        "interpretation_Tm_arrow_bb7700ff450be6c3158b7701fc6e62ef",
        "kinding_Circuit.gate@tok", "lemma_Circuit.ctrls_append",
        "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.lemma_equal_intro",
        "lemma_FStar.Set.lemma_equal_refl", "lemma_FStar.Set.mem_union",
        "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons", "token_correspondence_Circuit.ctrls",
        "token_correspondence_FStar.List.Tot.rev", "typing_Circuit.ctrls",
        "typing_FStar.List.Tot.append", "typing_FStar.List.Tot.op_At",
        "typing_FStar.List.Tot.rev", "typing_FStar.List.Tot.rev_acc",
        "typing_FStar.Set.mem", "typing_FStar.Set.union"
      ],
      0
    ],
    [
      "Circuit.rev_ctrls",
      4,
      2,
      1,
      [ "@query", "assumption_Circuit.gate_haseq" ],
      0
    ],
    [
      "Circuit.rev_ctrls",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.evalCirc_append_rev",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "assumption_Total.t_haseq",
        "equation_FStar.Set.eqtype", "equation_Total.state",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Circuit.evalCirc_append_rev",
      2,
      2,
      1,
      [
        "@query", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.op_At", "equation_FStar.List.Tot.rev",
        "equation_Total.state", "fuel_guarded_inversion_Total.t",
        "kinding_Circuit.gate@tok", "lemma_Circuit.evalCirc_append",
        "projection_inverse_BoxBool_proj_0", "typing_FStar.List.Tot.rev"
      ],
      0
    ],
    [
      "Circuit.evalCirc_append_rev",
      3,
      2,
      1,
      [ "@query", "assumption_Circuit.gate_haseq" ],
      0
    ],
    [
      "Circuit.rev_gate",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.rev_gate",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_gate",
      3,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "bool_inversion", "bool_typing",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Tm_unit",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Cons",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "data_elim_Total.Mkt", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Circuit.applyGate", "equation_Circuit.wfGate",
        "equation_Prims.eqtype", "equation_Total.lookup",
        "equation_Total.state", "equation_Total.update",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Total.t",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_Total.lookup_update1", "lemma_Total.lookup_update2",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_Negation", "primitive_Prims.op_disEquality",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Total.Mkt_elts",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "projection_inverse_Total.Mkt_elts",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_Circuit.applyGate",
        "typing_Circuit.wfGate", "typing_PairHeap.is_heap",
        "typing_Total.Mkt.elts", "typing_Total.lookup"
      ],
      0
    ],
    [
      "Circuit.rev_gate",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.rev_gate",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_inverse",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.rev_inverse",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.rev_inverse",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_1",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Tm_unit", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.applyGate",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.rev",
        "equation_FStar.List.Tot.test_sort", "equation_FStar.Set.eqtype",
        "equation_Prims._assert", "equation_Total.equal",
        "equation_Total.state",
        "equation_with_fuel_Circuit.evalCirc.fuel_instrumented",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.append.fuel_instrumented",
        "equation_with_fuel_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.rev_acc.fuel_instrumented",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.evalCirc.fuel_instrumented",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "fuel_irrelevance_FStar.List.Tot.append.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int", "kinding_Circuit.gate@tok",
        "lemma_Circuit.evalCirc_append", "lemma_Total.lemma_map_equal_elim",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "token_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "typing_Circuit.applyGate", "typing_Circuit.evalCirc",
        "typing_Circuit.wfCirc", "typing_FStar.List.Tot.append",
        "typing_FStar.List.Tot.rev", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.rev_inverse",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.rev_inverse",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.applyGate_state_swap",
      7,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "bool_inversion", "bool_typing",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "constructor_distinct_Tm_unit", "data_elim_Circuit.RCNOT",
        "data_elim_Circuit.RNOT", "data_elim_Circuit.RTOFF",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "equation_Circuit.applyGate", "equation_FStar.Set.eqtype",
        "equation_FStar.Set.subset", "equation_Prims.eqtype",
        "equation_SetExtra.ins", "equation_Total.agree_on",
        "equation_Total.lookup", "equation_Total.state",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "lemma_Total.lookup_update1", "lemma_Total.lookup_update2",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_Equality", "primitive_Prims.op_Negation",
        "primitive_Prims.op_disEquality",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_Circuit.applyGate", "typing_FStar.Set.empty",
        "typing_FStar.Set.mem", "typing_FStar.Set.singleton",
        "typing_FStar.Set.union", "typing_Total.lookup", "unit_typing"
      ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.evalCirc_state_swap",
      7,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_1",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_2",
        "binder_x_e3dc4db8239f49f041127584ba34ace6_3",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RTOFF",
        "data_elim_Prims.Cons", "data_elim_Prims.Mktuple2",
        "data_elim_Prims.Mktuple3", "data_typing_intro_Prims.Cons@tok",
        "data_typing_intro_Prims.Nil@tok", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_Circuit.applyGate", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.test_sort", "equation_FStar.Set.subset",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins", "equation_Total.agree_on",
        "equation_Total.state",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "equation_with_fuel_Circuit.evalCirc.fuel_instrumented",
        "equation_with_fuel_PairHeap.elts.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_PairHeap.elts.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_Circuit.evalCirc.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int",
        "function_token_typing_SetExtra.ins", "int_inversion", "int_typing",
        "interpretation_Tm_arrow_967aadad8a4fab8bb8433602482caae0",
        "kinding_Circuit.gate@tok", "lemma_FStar.Set.mem_empty",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_subset",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_BarBar",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_max",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.ctrls.fuel_instrumented",
        "token_correspondence_SetExtra.ins",
        "typing_AncillaHeap.MkancHeapRecord.hp", "typing_Circuit.ctrls",
        "typing_FStar.Set.mem", "typing_FStar.Set.singleton",
        "typing_FStar.Set.union", "typing_PairHeap.elts",
        "typing_SetExtra.ins"
      ],
      0
    ],
    [
      "Circuit.bennett",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.bennett",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.bennett",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.bennett",
      4,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_int", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.rev", "equation_Prims.eqtype",
        "equation_SetExtra.disjoint", "equation_Total.agree_on",
        "equation_Total.equal", "equation_Total.state",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_FStar.List.Tot.append.fuel_instrumented",
        "fuel_guarded_inversion_Total.t", "function_token_typing_Prims.int",
        "int_inversion", "kinding_Circuit.gate@tok",
        "lemma_Circuit.evalCirc_append", "lemma_Circuit.rev_uses",
        "lemma_FStar.Set.lemma_equal_elim", "lemma_FStar.Set.mem_complement",
        "primitive_Prims.op_Negation", "projection_inverse_BoxBool_proj_0",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "typing_Circuit.evalCirc", "typing_Circuit.mods",
        "typing_Circuit.uses", "typing_FStar.List.Tot.append",
        "typing_FStar.List.Tot.rev"
      ],
      0
    ],
    [
      "Circuit.uncompute_targ",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_targ",
      2,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Cons",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_FStar.Set.eqtype", "equation_Prims._assert",
        "equation_Prims.eqtype", "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.mods.fuel_instrumented",
        "equation_with_fuel_Circuit.uncompute.fuel_instrumented",
        "equation_with_fuel_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_Circuit.mods.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.mods.fuel_instrumented",
        "fuel_irrelevance_Circuit.uncompute.fuel_instrumented",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_FStar.Set.mem_empty", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.mods.fuel_instrumented",
        "token_correspondence_Circuit.uncompute.fuel_instrumented",
        "typing_Circuit.mods", "typing_Circuit.uncompute",
        "typing_FStar.Set.empty", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_SetExtra.ins", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.uncompute_wf",
      1,
      2,
      1,
      [
        "@query", "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert",
        "equation_with_fuel_Circuit.uncompute.fuel_instrumented",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_guarded_inversion_Prims.list",
        "fuel_irrelevance_Circuit.uncompute.fuel_instrumented",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort", "int_inversion",
        "primitive_Prims.op_AmpAmp", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "typing_Circuit.uncompute", "typing_Circuit.wfCirc"
      ],
      0
    ],
    [
      "Circuit.uncompute_uses_subset",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_uses_subset",
      2,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_Prims.Cons", "constructor_distinct_Prims.Nil",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Cons",
        "data_elim_Prims.Mktuple2", "data_elim_Prims.Mktuple3",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_FStar.Set.eqtype", "equation_FStar.Set.subset",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.uncompute.fuel_instrumented",
        "equation_with_fuel_Circuit.uses.fuel_instrumented",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.uncompute.fuel_instrumented",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_FStar.Set.mem_empty", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.uses.fuel_instrumented",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "typing_Circuit.uncompute", "typing_Circuit.uses",
        "typing_Circuit.wfCirc", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_SetExtra.ins", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.uncompute_ctrls_subset",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_ctrls_subset",
      2,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_int",
        "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "constructor_distinct_Prims.Nil", "constructor_distinct_Tm_unit",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RTOFF",
        "data_elim_Prims.Cons", "data_elim_Prims.Mktuple2",
        "data_elim_Prims.Mktuple3", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.circuit",
        "equation_FStar.List.Tot.test_sort", "equation_FStar.Set.eqtype",
        "equation_FStar.Set.subset", "equation_Prims._assert",
        "equation_Prims.eqtype", "equation_SetExtra.ins",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "equation_with_fuel_Circuit.uncompute.fuel_instrumented",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_Circuit.uncompute.fuel_instrumented",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_FStar.Set.mem_empty", "lemma_FStar.Set.mem_singleton",
        "lemma_FStar.Set.mem_union", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "typing_Circuit.ctrls", "typing_Circuit.uncompute",
        "typing_Circuit.wfCirc", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_SetExtra.ins", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      6,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int",
        "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_2",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "bool_typing", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Prims.Nil", "constructor_distinct_Tm_unit",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Mktuple2",
        "data_elim_Prims.Mktuple3", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.applyGate",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_FStar.Set.eqtype", "equation_FStar.Set.subset",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins", "equation_Total.agree_on",
        "equation_Total.state",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "equation_with_fuel_Circuit.evalCirc.fuel_instrumented",
        "equation_with_fuel_Circuit.uncompute.fuel_instrumented",
        "equation_with_fuel_Circuit.uses.fuel_instrumented",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.list",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_Circuit.evalCirc.fuel_instrumented",
        "fuel_irrelevance_Circuit.uncompute.fuel_instrumented",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int", "int_inversion", "int_typing",
        "lemma_FStar.Set.mem_complement", "lemma_FStar.Set.mem_empty",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_union",
        "lemma_Total.lookup_update2", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_Negation", "primitive_Prims.op_disEquality",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.ctrls.fuel_instrumented",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "typing_Circuit.applyGate", "typing_Circuit.ctrls",
        "typing_Circuit.wfCirc", "typing_FStar.Set.empty",
        "typing_FStar.Set.mem", "typing_FStar.Set.singleton",
        "typing_SetExtra.ins", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      7,
      2,
      2,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int",
        "binder_x_6d0180d4fcd10237cf0d87dd345d77cc_1",
        "binder_x_c4ad57559b80f11b499d69e4bf9180c0_2",
        "binder_x_e60bd314918e6f652802aca8b1ee914d_0", "bool_inversion",
        "bool_typing", "constructor_distinct_Prims.Cons",
        "constructor_distinct_Prims.Nil", "constructor_distinct_Tm_unit",
        "data_elim_Circuit.RCNOT", "data_elim_Circuit.RNOT",
        "data_elim_Circuit.RTOFF", "data_elim_Prims.Mktuple2",
        "data_elim_Prims.Mktuple3", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_Circuit.applyGate",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.test_sort",
        "equation_Prims._assert", "equation_Prims.eqtype",
        "equation_SetExtra.ins", "equation_Total.agree_on",
        "equation_Total.state",
        "equation_with_fuel_Circuit.ctrls.fuel_instrumented",
        "equation_with_fuel_Circuit.evalCirc.fuel_instrumented",
        "equation_with_fuel_Circuit.uncompute.fuel_instrumented",
        "equation_with_fuel_Circuit.uses.fuel_instrumented",
        "equation_with_fuel_Circuit.wfCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_correspondence_Circuit.uses.fuel_instrumented",
        "fuel_correspondence_Circuit.wfCirc.fuel_instrumented",
        "fuel_guarded_inversion_Circuit.gate",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Total.t",
        "fuel_irrelevance_Circuit.ctrls.fuel_instrumented",
        "fuel_irrelevance_Circuit.evalCirc.fuel_instrumented",
        "fuel_irrelevance_Circuit.uncompute.fuel_instrumented",
        "fuel_irrelevance_Circuit.uses.fuel_instrumented",
        "fuel_irrelevance_Circuit.wfCirc.fuel_instrumented",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_SetExtra.ins", "int_inversion", "int_typing",
        "interpretation_Tm_arrow_967aadad8a4fab8bb8433602482caae0",
        "lemma_FStar.Set.mem_complement", "lemma_FStar.Set.mem_empty",
        "lemma_FStar.Set.mem_singleton", "lemma_FStar.Set.mem_subset",
        "lemma_FStar.Set.mem_union", "lemma_Total.lookup_update2",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_Equality", "primitive_Prims.op_Negation",
        "primitive_Prims.op_disEquality",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl", "projection_inverse_Prims.Nil_a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "subterm_ordering_Prims.Cons",
        "token_correspondence_Circuit.ctrls.fuel_instrumented",
        "token_correspondence_Circuit.wfCirc.fuel_instrumented",
        "token_correspondence_SetExtra.ins", "typing_Circuit.ctrls",
        "typing_Circuit.wfCirc", "typing_FStar.Set.complement",
        "typing_FStar.Set.empty", "typing_FStar.Set.mem",
        "typing_FStar.Set.singleton", "typing_FStar.Set.union",
        "typing_SetExtra.ins", "unit_inversion"
      ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      8,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      9,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      10,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      11,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      12,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_agree",
      13,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      1,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      5,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      6,
      2,
      1,
      [
        "@query", "bool_inversion", "data_elim_Total.Mkt",
        "equation_Circuit.circuit", "equation_FStar.List.Tot.rev",
        "equation_FStar.Set.eqtype", "equation_FStar.Set.subset",
        "equation_Prims.eqtype", "equation_Total.agree_on",
        "equation_Total.equal", "equation_Total.state",
        "fuel_correspondence_Circuit.ctrls.fuel_instrumented",
        "fuel_correspondence_Circuit.evalCirc.fuel_instrumented",
        "fuel_correspondence_Circuit.uncompute.fuel_instrumented",
        "fuel_guarded_inversion_Total.t", "kinding_Circuit.gate@tok",
        "lemma_Circuit.evalCirc_append", "lemma_Circuit.rev_ctrls",
        "lemma_Circuit.uncompute_wf", "lemma_FStar.Set.lemma_equal_elim",
        "lemma_FStar.Set.mem_complement", "lemma_FStar.Set.mem_singleton",
        "pretyping_ae567c2fb75be05905677af440075565",
        "primitive_Prims.op_Equality", "primitive_Prims.op_Negation",
        "projection_inverse_BoxBool_proj_0", "typing_Circuit.ctrls",
        "typing_Circuit.uncompute", "typing_FStar.List.Tot.rev",
        "typing_FStar.Set.mem"
      ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      7,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Circuit.uncompute_mixed_inverse",
      8,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ]
  ]
]