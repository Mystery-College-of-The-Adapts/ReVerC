[
  "C4Âª%“Íø§ Çý\\pB¬",
  [
    [
      "Interpreter.isVal",
      1,
      2,
      1,
      [
        "@query", "binder_x_6b74f0037009d29c0456341c2163d847_0",
        "constructor_distinct_PairHeap.Empty",
        "equality_tok_Prims.LexTop@tok",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "subterm_ordering_ExprTypes.ARRAY"
      ],
      0
    ],
    [
      "Interpreter.isVal",
      2,
      2,
      1,
      [
        "@query", "binder_x_84a62770dc4fae20d5c368546b439b5f_0",
        "constructor_distinct_PairHeap.Empty",
        "equality_tok_Prims.LexTop@tok",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a", "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Interpreter.isBexp",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_PairHeap.Empty",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a"
      ],
      0
    ],
    [
      "Interpreter.get_bexp",
      1,
      2,
      1,
      [
        "@query", "bool_inversion", "disc_equation_ExprTypes.BEXP",
        "disc_equation_ExprTypes.BOOL", "disc_equation_ExprTypes.LOC",
        "equality_tok_BoolExp.BFalse@tok", "equation_Interpreter.isBexp",
        "refinement_interpretation_Tm_refine_9a3e6054d1a54bd3d9d44a420bf3452f",
        "typing_Interpreter.isBexp"
      ],
      0
    ],
    [
      "Interpreter.step",
      1,
      2,
      2,
      [
        "@query", "constructor_distinct_PairHeap.Empty",
        "data_elim_ExprTypes.AND", "data_elim_ExprTypes.APPEND",
        "data_elim_ExprTypes.APPLY", "data_elim_ExprTypes.ASSIGN",
        "data_elim_ExprTypes.GET_ARRAY", "data_elim_ExprTypes.LET",
        "data_elim_ExprTypes.ROT", "data_elim_ExprTypes.SEQUENCE",
        "data_elim_ExprTypes.SLICE", "data_elim_ExprTypes.XOR",
        "equality_tok_BoolExp.BFalse@tok", "equality_tok_Prims.LexTop@tok",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Prims.fst",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "pretyping_6b74f0037009d29c0456341c2163d847",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Mktuple2__1",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_ExprTypes.AND",
        "subterm_ordering_ExprTypes.APPEND",
        "subterm_ordering_ExprTypes.APPLY",
        "subterm_ordering_ExprTypes.ASSERT",
        "subterm_ordering_ExprTypes.ASSIGN",
        "subterm_ordering_ExprTypes.GET_ARRAY",
        "subterm_ordering_ExprTypes.LET", "subterm_ordering_ExprTypes.ROT",
        "subterm_ordering_ExprTypes.SEQUENCE",
        "subterm_ordering_ExprTypes.SLICE", "subterm_ordering_ExprTypes.XOR",
        "subterm_ordering_Prims.Mktuple2", "subterm_ordering_Prims.Mktuple3"
      ],
      0
    ],
    [
      "Interpreter.step",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equality_tok_Prims.LexTop@tok", "equation_Prims.fst",
        "fuel_guarded_inversion_Prims.list",
        "pretyping_3862c4e8ff39bfc3871b6a47e7ff5b2e",
        "proj_equation_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__1", "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Interpreter.boolState",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolInit",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolInit",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolInit",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Interpreter.boolAlloc", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Interpreter.boolAlloc",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolAlloc",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolAlloc",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Interpreter.boolAssign", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Interpreter.boolAssign",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolAssign",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolAssign",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Interpreter.boolEval", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Interpreter.boolEval",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolEval",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Interpreter.boolInterp",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "assumption_Prims.tuple2_haseq",
        "assumption_Total.t_haseq", "equation_FStar.Set.eqtype",
        "equation_Interpreter.boolState", "equation_Total.state",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_Total.state",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      1,
      2,
      1,
      [
        "@query", "binder_x_9e791e0e7c31c999b5e35341dea99f2f_0",
        "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_ExprTypes.ARRAY", "disc_equation_ExprTypes.LAMBDA",
        "disc_equation_ExprTypes.LOC", "disc_equation_ExprTypes.UNIT",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_Interpreter.isVal.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_ExprTypes.ARRAY__0",
        "projection_inverse_PairHeap.Empty__a",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_79f9df3462c069f4e3891754d542d6cd",
        "subterm_ordering_ExprTypes.ARRAY", "typing_Interpreter.isVal"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      2,
      2,
      1,
      [
        "@query", "binder_x_45b5ec812472bc4115943497241d5053_0",
        "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_ExprTypes.LOC", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_Interpreter.isVal_lst.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Cons_hd",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_fc003454349819ae5ed8a644efa3342e",
        "subterm_ordering_Prims.Cons", "typing_Interpreter.isVal_lst"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.substVal",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Interpreter.substVal",
      5,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.substVal",
      7,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Interpreter.substVal",
      8,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.evalBool",
      1,
      2,
      1,
      [
        "@query", "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_Utils.Err", "disc_equation_Utils.Val",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Utils.result",
        "function_token_typing_AncillaHeap.emptyHeap",
        "pretyping_f537159ed795b314b4e58c260361ae86",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.V_v",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.V_v",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27"
      ],
      0
    ],
    [
      "Interpreter.evalBool",
      2,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Interpreter.alloc_preservation",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.alloc_preservation",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.alloc_preservation",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.assign_preservation",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.assign_preservation",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.assign_preservation",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ]
  ]
]