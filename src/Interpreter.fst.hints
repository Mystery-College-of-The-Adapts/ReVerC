[
  "\u0015ã>πÅY«Püfk@iCÇ<",
  [
    [
      "Interpreter.isVal",
      1,
      2,
      1,
      [
        "@query", "binder_x_6b74f0037009d29c0456341c2163d847_0",
        "constructor_distinct_PairHeap.Empty",
        "equality_tok_Prims.LexTop@tok",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "subterm_ordering_ExprTypes.ARRAY"
      ],
      0
    ],
    [
      "Interpreter.isVal",
      2,
      2,
      1,
      [
        "@query", "binder_x_84a62770dc4fae20d5c368546b439b5f_0",
        "constructor_distinct_PairHeap.Empty",
        "equality_tok_Prims.LexTop@tok",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a", "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Interpreter.isBexp",
      1,
      2,
      1,
      [
        "@query", "constructor_distinct_PairHeap.Empty",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a"
      ],
      0
    ],
    [
      "Interpreter.get_bexp",
      1,
      2,
      1,
      [
        "@query", "bool_inversion", "disc_equation_ExprTypes.BEXP",
        "disc_equation_ExprTypes.BOOL", "disc_equation_ExprTypes.LOC",
        "equality_tok_BoolExp.BFalse@tok", "equation_Interpreter.isBexp",
        "refinement_interpretation_Tm_refine_9a3e6054d1a54bd3d9d44a420bf3452f",
        "typing_Interpreter.isBexp"
      ],
      0
    ],
    [
      "Interpreter.step",
      1,
      2,
      2,
      [
        "@query", "constructor_distinct_PairHeap.Empty",
        "data_elim_ExprTypes.AND", "data_elim_ExprTypes.APPEND",
        "data_elim_ExprTypes.APPLY", "data_elim_ExprTypes.ASSIGN",
        "data_elim_ExprTypes.GET_ARRAY", "data_elim_ExprTypes.LET",
        "data_elim_ExprTypes.ROT", "data_elim_ExprTypes.SEQUENCE",
        "data_elim_ExprTypes.SLICE", "data_elim_ExprTypes.XOR",
        "equality_tok_BoolExp.BFalse@tok", "equality_tok_Prims.LexTop@tok",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap", "equation_Prims.fst",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "pretyping_6b74f0037009d29c0456341c2163d847",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Mktuple2__1",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "subterm_ordering_ExprTypes.AND",
        "subterm_ordering_ExprTypes.APPEND",
        "subterm_ordering_ExprTypes.APPLY",
        "subterm_ordering_ExprTypes.ASSERT",
        "subterm_ordering_ExprTypes.ASSIGN",
        "subterm_ordering_ExprTypes.GET_ARRAY",
        "subterm_ordering_ExprTypes.LET", "subterm_ordering_ExprTypes.ROT",
        "subterm_ordering_ExprTypes.SEQUENCE",
        "subterm_ordering_ExprTypes.SLICE", "subterm_ordering_ExprTypes.XOR",
        "subterm_ordering_Prims.Mktuple2", "subterm_ordering_Prims.Mktuple3"
      ],
      0
    ],
    [
      "Interpreter.step",
      2,
      2,
      1,
      [
        "@query", "constructor_distinct_Prims.Nil",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equality_tok_Prims.LexTop@tok", "equation_Prims.fst",
        "fuel_guarded_inversion_Prims.list",
        "pretyping_3862c4e8ff39bfc3871b6a47e7ff5b2e",
        "proj_equation_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__1", "subterm_ordering_Prims.Cons"
      ],
      0
    ],
    [
      "Interpreter.boolState",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolInit",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolInit",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolInit",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Interpreter.boolAlloc", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Interpreter.boolAlloc",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolAlloc",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolAlloc",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Interpreter.boolAssign", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Interpreter.boolAssign",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.boolAssign",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolAssign",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [ "Interpreter.boolEval", 1, 2, 1, [ "@query" ], 0 ],
    [
      "Interpreter.boolEval",
      2,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.boolEval",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Interpreter.boolInterp",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool",
        "assumption_Prims.HasEq_int", "assumption_Prims.tuple2_haseq",
        "assumption_Total.t_haseq", "equation_FStar.Set.eqtype",
        "equation_Interpreter.boolState", "equation_Total.state",
        "function_token_typing_Prims.bool",
        "function_token_typing_Prims.int",
        "function_token_typing_Total.state",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      1,
      2,
      1,
      [
        "@query", "binder_x_9e791e0e7c31c999b5e35341dea99f2f_0",
        "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_ExprTypes.ARRAY", "disc_equation_ExprTypes.LAMBDA",
        "disc_equation_ExprTypes.LOC", "disc_equation_ExprTypes.UNIT",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_Interpreter.isVal.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_ExprTypes.ARRAY__0",
        "projection_inverse_PairHeap.Empty__a",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_79f9df3462c069f4e3891754d542d6cd",
        "subterm_ordering_ExprTypes.ARRAY", "typing_Interpreter.isVal"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      2,
      2,
      1,
      [
        "@query", "binder_x_45b5ec812472bc4115943497241d5053_0",
        "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_ExprTypes.LOC", "disc_equation_Prims.Cons",
        "disc_equation_Prims.Nil", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_Interpreter.isVal_lst.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_irrelevance_Interpreter.isVal_lst.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Cons_hd",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Cons_a",
        "projection_inverse_Prims.Cons_hd",
        "projection_inverse_Prims.Cons_tl",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_fc003454349819ae5ed8a644efa3342e",
        "subterm_ordering_Prims.Cons", "typing_Interpreter.isVal_lst"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      3,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.substVal",
      4,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Interpreter.substVal",
      5,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.substVal",
      6,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_bool" ],
      0
    ],
    [
      "Interpreter.substVal",
      7,
      2,
      1,
      [ "@query", "assumption_Prims.HasEq_int" ],
      0
    ],
    [
      "Interpreter.substVal",
      8,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.evalBool",
      1,
      2,
      1,
      [
        "@query", "bool_inversion", "constructor_distinct_PairHeap.Empty",
        "disc_equation_Utils.Err", "disc_equation_Utils.Val",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Utils.result",
        "function_token_typing_AncillaHeap.emptyHeap",
        "pretyping_f537159ed795b314b4e58c260361ae86",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.V_v",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.V_v",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27"
      ],
      0
    ],
    [
      "Interpreter.evalBool",
      2,
      2,
      1,
      [
        "@query", "data_elim_Interpreter.Mkinterpretation",
        "equation_FStar.Set.eqtype", "equation_Interpreter.boolInterp",
        "equation_Interpreter.boolState",
        "function_token_typing_Interpreter.boolInterp",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f"
      ],
      0
    ],
    [
      "Interpreter.alloc_preservation",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.alloc_preservation",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.alloc_preservation",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.assign_preservation",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.assign_preservation",
      2,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.assign_preservation",
      3,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.step_preservation",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.step_preservation_lst",
      1,
      2,
      1,
      [
        "@query", "assumption_Prims.HasEq_bool", "assumption_Prims.HasEq_int"
      ],
      0
    ],
    [
      "Interpreter.step_preservation",
      2,
      2,
      2,
      [
        "@query", "binder_x_662301a8da7359b5a0ac2c88bc1498cf_9",
        "binder_x_6b74f0037009d29c0456341c2163d847_7",
        "binder_x_6de16587cc001082e7ad3c6edb220a5e_2",
        "binder_x_a2802af386a17e463fd7c071943a33cc_0",
        "binder_x_a2802af386a17e463fd7c071943a33cc_1",
        "binder_x_ceda2e3cf203014e9561a218c5243564_8",
        "binder_x_de64506569149da0935c233783a32cc2_3", "bool_inversion",
        "constructor_distinct_ExprTypes.AND",
        "constructor_distinct_ExprTypes.APPEND",
        "constructor_distinct_ExprTypes.APPLY",
        "constructor_distinct_ExprTypes.ASSERT",
        "constructor_distinct_ExprTypes.ASSIGN",
        "constructor_distinct_ExprTypes.BOOL",
        "constructor_distinct_ExprTypes.GET_ARRAY",
        "constructor_distinct_ExprTypes.LAMBDA",
        "constructor_distinct_ExprTypes.LET",
        "constructor_distinct_ExprTypes.ROT",
        "constructor_distinct_ExprTypes.SEQUENCE",
        "constructor_distinct_ExprTypes.SLICE",
        "constructor_distinct_ExprTypes.XOR",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Mktuple2",
        "constructor_distinct_Prims.Mktuple3",
        "constructor_distinct_Prims.unit", "constructor_distinct_Tm_unit",
        "constructor_distinct_Utils.Err", "constructor_distinct_Utils.Val",
        "constructor_distinct_Utils.result", "data_elim_ExprTypes.AND",
        "data_elim_ExprTypes.APPEND", "data_elim_ExprTypes.APPLY",
        "data_elim_ExprTypes.ASSIGN", "data_elim_ExprTypes.GET_ARRAY",
        "data_elim_ExprTypes.LET", "data_elim_ExprTypes.ROT",
        "data_elim_ExprTypes.SEQUENCE", "data_elim_ExprTypes.SLICE",
        "data_elim_ExprTypes.XOR", "data_elim_Utils.Err",
        "data_elim_Utils.Val", "data_typing_intro_Prims.Mktuple2@tok",
        "disc_equation_ExprTypes.AND", "disc_equation_ExprTypes.APPEND",
        "disc_equation_ExprTypes.APPLY", "disc_equation_ExprTypes.ARRAY",
        "disc_equation_ExprTypes.ASSERT", "disc_equation_ExprTypes.ASSIGN",
        "disc_equation_ExprTypes.BEXP", "disc_equation_ExprTypes.BOOL",
        "disc_equation_ExprTypes.GET_ARRAY", "disc_equation_ExprTypes.LET",
        "disc_equation_ExprTypes.LOC", "disc_equation_ExprTypes.ROT",
        "disc_equation_ExprTypes.SEQUENCE", "disc_equation_ExprTypes.SLICE",
        "disc_equation_ExprTypes.XOR", "equality_tok_ExprTypes.UNIT@tok",
        "equality_tok_Prims.LexTop@tok", "equation_AncillaHeap.ancHeap",
        "equation_AncillaHeap.cond", "equation_AncillaHeap.emptyHeap",
        "equation_FStar.List.Tot.test_sort", "equation_FStar.Set.eqtype",
        "equation_Interpreter.config", "equation_Interpreter.isBexp",
        "equation_Prims._assert", "equation_Prims.snd",
        "equation_Utils.bindT", "equation_Utils.getVal",
        "equation_Utils.is_Err", "equation_Utils.is_Val",
        "equation_with_fuel_Interpreter.isVal.fuel_instrumented",
        "equation_with_fuel_Interpreter.step.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.isVal.fuel_instrumented",
        "fuel_correspondence_Interpreter.step.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Interpreter.interpretation",
        "fuel_guarded_inversion_Prims.tuple2",
        "fuel_guarded_inversion_Prims.tuple3",
        "fuel_guarded_inversion_Utils.result",
        "fuel_irrelevance_Interpreter.step.fuel_instrumented",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "function_token_typing_Utils.getVal",
        "interpretation_Tm_abs_006b1694bb1a787355d910cb052aca07",
        "interpretation_Tm_abs_21f2992ca42e12fec878b95b5baf7307",
        "interpretation_Tm_abs_381be45e8a3974e1c63576644dd97052",
        "interpretation_Tm_abs_3d71f2fe6a3d4235cf8ab9a53d981d94",
        "interpretation_Tm_abs_62359ff8db4829d2e3cf82250ecd361c",
        "interpretation_Tm_abs_7c6ce8a6e62a908b5cb995129afb549a",
        "interpretation_Tm_abs_7e518e5eab3ee57199ad194a0d9d84ec",
        "interpretation_Tm_abs_7ea39c059b11be112ce39a83c89a0fd0",
        "interpretation_Tm_abs_80bb224ce14d292a8d94b6c3c8c6d968",
        "interpretation_Tm_abs_82bd2b55d877e457d1b35cb30016fd3e",
        "interpretation_Tm_abs_82fe06fd42e896f93d134293f01f6c07",
        "interpretation_Tm_abs_97b6c0a9202d5b4d48afa1f6bf7cecac",
        "interpretation_Tm_abs_ad67e99e57f9788d0ab9462753777886",
        "interpretation_Tm_abs_dc9f43bf2187cf6c07a3ff07c8488934",
        "interpretation_Tm_abs_dcdbe06440c29b258a546e22a1a2f7a8",
        "interpretation_Tm_abs_eba2bdcd056943bd0e0ecf6dd0e90b4b",
        "interpretation_Tm_arrow_cc1302d183189fb36ec98de01a178113",
        "kinding_ExprTypes.gExpr@tok",
        "pretyping_08425ce71ef3955a3f3aa7c6a989de99",
        "pretyping_f8666440faa91836cc5a13998af863fc",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_Negation",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_ExprTypes.AND__0",
        "projection_inverse_ExprTypes.APPEND__0",
        "projection_inverse_ExprTypes.APPLY__0",
        "projection_inverse_ExprTypes.ASSERT__0",
        "projection_inverse_ExprTypes.ASSIGN__0",
        "projection_inverse_ExprTypes.BOOL__0",
        "projection_inverse_ExprTypes.GET_ARRAY__0",
        "projection_inverse_ExprTypes.LET__0",
        "projection_inverse_ExprTypes.ROT__0",
        "projection_inverse_ExprTypes.SEQUENCE__0",
        "projection_inverse_ExprTypes.SLICE__0",
        "projection_inverse_ExprTypes.XOR__0",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "projection_inverse_Prims.Mktuple3__1",
        "projection_inverse_Prims.Mktuple3__2",
        "projection_inverse_Prims.Mktuple3__3",
        "projection_inverse_Prims.Mktuple3__a",
        "projection_inverse_Prims.Mktuple3__b",
        "projection_inverse_Prims.Mktuple3__c",
        "projection_inverse_Utils.Err__0", "projection_inverse_Utils.Err__a",
        "projection_inverse_Utils.Val__0", "projection_inverse_Utils.Val__a",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27",
        "refinement_interpretation_Tm_refine_a6f434602943b2296f2a902c15fee423",
        "subterm_ordering_ExprTypes.AND",
        "subterm_ordering_ExprTypes.APPEND",
        "subterm_ordering_ExprTypes.APPLY",
        "subterm_ordering_ExprTypes.ASSERT",
        "subterm_ordering_ExprTypes.ASSIGN",
        "subterm_ordering_ExprTypes.GET_ARRAY",
        "subterm_ordering_ExprTypes.LET", "subterm_ordering_ExprTypes.ROT",
        "subterm_ordering_ExprTypes.SEQUENCE",
        "subterm_ordering_ExprTypes.SLICE", "subterm_ordering_ExprTypes.XOR",
        "subterm_ordering_Prims.Mktuple2", "subterm_ordering_Prims.Mktuple3",
        "token_correspondence_Interpreter.step.fuel_instrumented",
        "token_correspondence_Prims.op_LessThan",
        "token_correspondence_Utils.getVal", "typing_Interpreter.config",
        "typing_Interpreter.isBexp", "typing_Interpreter.isVal",
        "typing_Interpreter.step", "typing_Utils.getVal",
        "typing_Utils.is_Err", "typing_Utils.is_Val", "unit_inversion",
        "unit_typing"
      ],
      0
    ],
    [
      "Interpreter.step_preservation",
      3,
      2,
      1,
      [
        "@query", "binder_x_6de16587cc001082e7ad3c6edb220a5e_2",
        "binder_x_84a62770dc4fae20d5c368546b439b5f_7",
        "binder_x_de64506569149da0935c233783a32cc2_3",
        "constructor_distinct_PairHeap.Empty",
        "constructor_distinct_Prims.Mktuple2",
        "constructor_distinct_Prims.Nil", "constructor_distinct_Utils.Val",
        "disc_equation_Prims.Cons", "disc_equation_Prims.Nil",
        "equation_AncillaHeap.ancHeap", "equation_AncillaHeap.cond",
        "equation_AncillaHeap.emptyHeap",
        "equation_FStar.List.Tot.test_sort",
        "equation_Interpreter.listconfig", "equation_Prims._assert",
        "equation_Prims.snd", "equation_Utils.getVal",
        "equation_Utils.is_Val",
        "equation_with_fuel_Interpreter.step_lst.fuel_instrumented",
        "equation_with_fuel_PairHeap.is_heap.fuel_instrumented",
        "fuel_correspondence_Interpreter.step_lst.fuel_instrumented",
        "fuel_correspondence_PairHeap.is_heap.fuel_instrumented",
        "fuel_guarded_inversion_Interpreter.interpretation",
        "fuel_guarded_inversion_Prims.list",
        "function_token_typing_AncillaHeap.emptyHeap",
        "function_token_typing_FStar.List.Tot.test_sort",
        "proj_equation_AncillaHeap.MkancHeapRecord_hp",
        "proj_equation_Prims.Mktuple2__2",
        "projection_inverse_AncillaHeap.MkancHeapRecord_hp",
        "projection_inverse_PairHeap.Empty__a",
        "projection_inverse_Prims.Mktuple2__1",
        "projection_inverse_Prims.Mktuple2__2",
        "projection_inverse_Prims.Mktuple2__a",
        "projection_inverse_Prims.Mktuple2__b",
        "projection_inverse_Prims.Nil_a", "projection_inverse_Utils.Val__0",
        "projection_inverse_Utils.Val__a",
        "refinement_interpretation_Tm_refine_456af8f0ed2e6b59cd4a5bb4e67b3c27"
      ],
      0
    ]
  ]
]